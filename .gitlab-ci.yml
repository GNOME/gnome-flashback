stages:
  - validate
  - build
  - release
  - analysis

variables:
  DEBIAN_FRONTEND: noninteractive
  GIT_SUBMODULE_STRATEGY: normal

.install-ubuntu-dependencies: &install-ubuntu-dependencies
  apt-get install -q -y --no-install-recommends
                  autoconf-archive
                  automake
                  autopoint
                  build-essential
                  gettext
                  git
                  gsettings-desktop-schemas-dev
                  libasound2-dev
                  libcanberra-gtk3-dev
                  libgdk-pixbuf2.0-dev
                  libgdm-dev
                  libglib2.0-dev
                  libgnome-bluetooth-3.0-dev
                  libgnome-desktop-3-dev
                  libgnome-panel-dev
                  libgtk-3-dev
                  libibus-1.0-dev
                  libpam0g-dev
                  libpango1.0-dev
                  libpolkit-agent-1-dev
                  libpolkit-gobject-1-dev
                  libpulse-dev
                  libsystemd-dev
                  libtool
                  libupower-glib-dev
                  libx11-dev
                  libx11-xcb-dev
                  libxcb-randr0-dev
                  libxext-dev
                  libxfixes-dev
                  libxi-dev
                  libxkbfile-dev
                  libxrandr-dev
                  libxxf86vm-dev
                  xkb-data

menu:
  image: ubuntu:devel
  stage: validate
  except:
    - tags
  before_script:
    - apt-get update
    - apt-get install -q -y --no-install-recommends libxml2-utils
  script:
    - xmllint --noblanks --noout
      --path https://standards.freedesktop.org/menu-spec/menu-latest.dtd
      data/menus/gnome-flashback-applications.menu

ubuntu:
  image: ubuntu:devel
  stage: build
  before_script:
    - apt-get update
    - *install-ubuntu-dependencies
  script:
    - ./autogen.sh
    - make
    - make distcheck
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "${CI_PROJECT_NAME}-*.tar.xz"

release:
  image: ubuntu:devel
  stage: release
  needs:
    - job: ubuntu
      artifacts: true
  before_script:
    - apt-get update
    - apt-get install -q -y --no-install-recommends
                      ca-certificates
                      curl
  variables:
    GNOME_RELEASE_SERVICE_API_URL: "https://gnome-release-route-gnome-release-service.apps.openshift.gnome.org"
    GNOME_RELEASE_SERVICE_API_INSTALL_MODULE_RELEASE_ENDPOINT: "$GNOME_RELEASE_SERVICE_API_URL/install-module-release"
    TARBALL_ARTIFACT_PATH: "${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.tar.xz"
  id_tokens:
    JWT_TOKEN:
      aud: gnome-release-service
  script:
    - ls -al "${TARBALL_ARTIFACT_PATH}"
    - >
      curl --fail-with-body -X POST "$GNOME_RELEASE_SERVICE_API_INSTALL_MODULE_RELEASE_ENDPOINT"
      -H "Authorization: Bearer $JWT_TOKEN"
      -F "tarball=@${TARBALL_ARTIFACT_PATH}"
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED

coverity:
  image: ubuntu:devel
  stage: analysis
  when: manual
  before_script:
    - apt-get update
    - *install-ubuntu-dependencies
    - apt-get install -q -y --no-install-recommends
                      ca-certificates
                      clang
                      curl
  script:
    - curl https://scan.coverity.com/download/linux64
      --data "token=$COVERITY_TOKEN&project=gnome-flashback"
      --output /tmp/coverity_tool.tgz
    - tar zxf /tmp/coverity_tool.tgz
    - CC=clang ./autogen.sh --disable-Werror
    - ./cov-analysis-linux64-*/bin/cov-build --dir cov-int make
    - tar czf cov-int.tar.gz cov-int
    - curl --form token=$COVERITY_TOKEN
      --form email=$GITLAB_USER_EMAIL
      --form file=@cov-int.tar.gz
      --form version="$(autoconf --trace='AC_INIT:$2')-$CI_COMMIT_SHORT_SHA"
      https://scan.coverity.com/builds?project=gnome-flashback
  only:
    - master
